On Sun, 10 Dec 2000, Michael StrÃ¶der typed thusly: > I think we should leave the 1.x stuff as is and start with > python-ldap-ext based on OpenLDAP 2.0.x... Okay, to keep everyone on the list informed: Michael, as a knowledgable Karlsruhe local, showed me all the local restaurants that have closed down and then we discussed the direction for python-ldap. After a few drinks, and a discussion on cats, we agreed on the following plan: * python-ldap-1.10 will be tidied up, with just the memory-leak patches applied, and a proper documentation build. (ie no v3 changes will be applied as it breaks v2 builds.) A final release will be made. * A new python-ldap-2.0 will be started, with an API that is likely to be somewhat incompatible with that of p-l-1.10. In particular, the following will be the major compatibility targets: + Python-2.0 support (ie unicode) + OpenLDAP-2.0 support (ie LDAPv3/LDAP-EXT) This means that people relying on v2 client/servers should be happy enough with a reasonably stable release. And people wanting to live in the 3rd millenium should be happy with a version (relatively) free of legacy support. Please, comment! Are there problems with the above plan? In addition, I seek more comment on any more changes that the _ldap library may need to support LDAPv3 connections. (Remember that the purpose of this module is not to give an abstraction of X.500 directory services, but rather to provide an abstraction of the LDAP C API.) d -- David Leonard David.Leonard at dstc.edu.au DSTC Room:78-632 Ph:+61 7 336 58358 The University of Queensland QLD 4072 AUSTRALIA B73CD65FBEF4C089B79A8EBADF1A932F13EA0FC8 I put my chin on my knee, and looked for flaws in the soft grain of my beige plastic monitor casing. - Julian Assange